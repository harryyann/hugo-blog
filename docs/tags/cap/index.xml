<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CAP on Website of Harry Yang</title>
    <link>https://yanghairui.life/tags/cap/</link>
    <description>Recent content in CAP on Website of Harry Yang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 12 Sep 2021 16:00:54 +0800</lastBuildDate><atom:link href="https://yanghairui.life/tags/cap/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>分布式事务的实现方式</title>
      <link>https://yanghairui.life/post/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Sun, 12 Sep 2021 16:00:54 +0800</pubDate>
      
      <guid>https://yanghairui.life/post/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</guid>
      
        <description>分布式基础理论 CAP CAP 理论可以表述为，一个分布式系统最多只能同时满足一致性（Consistency）、可用性（Availability）和分区容错性（Partition Tolerance）这三项中的两项。
 C（Consistency）：一致性，所有节点同时看到相同的数据，即每次写入，都是要保证所有节点都写入成功。 A（Availability）：可用性，任何时候，读写都是成功的，即服务总是可用的，比如稳定性可以做到三个9，四个9等，这就是对可用性的描述。 P（Partition Tolerance）：分区容错性，当部分节点故障或者网络错误时，系统仍然可用。  CAP理论用反证法很容易证明，如果CAP都满足，有分区容错P，就一定不能满足一致性C。</description>
      
    </item>
    
  </channel>
</rss>